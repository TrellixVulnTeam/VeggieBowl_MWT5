{"ast":null,"code":"import { shareReplay, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./web-request.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(webReqService, router) {\n      this.webReqService = webReqService;\n      this.router = router;\n    }\n\n    login(email, password) {\n      return this.webReqService.login(email, password).pipe(shareReplay(), tap(res => {\n        // the auth tokens will be in the header of this response\n        this.setSession(res.body._id, res.headers.get('x-access-token') || '{}', res.headers.get('x-refresh-token') || '{}');\n      }));\n    }\n\n    logout() {\n      this.removeSession();\n    }\n\n    getAccessToken() {\n      return localStorage.getItem('x-access-token');\n    }\n\n    getRefreshToken() {\n      return localStorage.getItem('x-refresh-token');\n    }\n\n    setAccessToken(accessToken) {\n      localStorage.setItem('x-access-token', accessToken);\n    }\n\n    setRefreshToken(refreshToken) {\n      localStorage.setItem('x-refresh-token', refreshToken);\n    }\n\n    setSession(userId, accessToken, refreshToken) {\n      localStorage.setItem('user-id', userId);\n      localStorage.setItem('x-access-token', accessToken);\n      localStorage.setItem('x-refresh-token', refreshToken);\n    }\n\n    removeSession() {\n      localStorage.removeItem('user-id');\n      localStorage.removeItem('access-token');\n      localStorage.removeItem('refresh-token');\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.WebRequestService), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}