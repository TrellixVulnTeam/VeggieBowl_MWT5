{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./web-request.service\";\nimport * as i2 from \"@angular/common/http\";\nexport let IngredientService = /*#__PURE__*/(() => {\n  class IngredientService {\n    constructor(webRequestService, httpClient) {\n      this.webRequestService = webRequestService;\n      this.httpClient = httpClient;\n    }\n\n    searchIngredients(query) {\n      // return this.webRequestService.post<{payload: Array<Ingredient>}>('ingredients', {payload: query}\n      // ).pipe(map(data => data.payload))\n      // todo fix dis ugly shit\n      //return this.httpClient.post<{payload: Array<Ingredient>}>('http://localhost:3000/ingredients', {payload: query} local variant\n      return this.httpClient.post('ingredients', {\n        payload: query\n      }).pipe(map(data => data.payload));\n    }\n\n  }\n\n  IngredientService.ɵfac = function IngredientService_Factory(t) {\n    return new (t || IngredientService)(i0.ɵɵinject(i1.WebRequestService), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  IngredientService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IngredientService,\n    factory: IngredientService.ɵfac,\n    providedIn: 'root'\n  });\n  return IngredientService;\n})();","map":null,"metadata":{},"sourceType":"module"}